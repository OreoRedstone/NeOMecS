<Window x:Class="NeOMecS.Interface.SimulationWindow"
        KeyDown="Window_KeyDown"
        KeyUp="Window_KeyUp"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NeOMecS"
        xmlns:sharpGL="clr-namespace:SharpGL.WPF;assembly=SharpGL.WPF"
        mc:Ignorable="d" FontFamily="Segoe UI Light" FontSize="14" FontWeight="Bold"
        WindowStartupLocation="CenterScreen"
        Title="Newtonian Orbital Mechanics Simulation" Height="600" Width="1000" MinWidth="650" MinHeight="300" MouseWheel="Window_MouseWheel">
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewCommandBinding_Executed"/>
        <CommandBinding Command="Open" Executed="OpenCommandBinding_Executed"/>
        <CommandBinding Command="Save" Executed="SaveCommandBinding_Executed"/>
        <CommandBinding Command="SaveAs" Executed="SaveAsCommandBinding_Executed"/>
        <CommandBinding Command="Close" Executed="ExitCommandBinding_Executed"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="New"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="Open"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="Save"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Alt" Command="SaveAs"/>
        <KeyBinding Key="F4" Modifiers="Alt" Command="Close"/>
    </Window.InputBindings>
    <Grid Background="{StaticResource Background}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0"/>
            <ColumnDefinition Width="*" MinWidth="150"/>
            <ColumnDefinition Width="3*" MinWidth="300"/>
            <ColumnDefinition Width="*" MinWidth="150"/>
            <ColumnDefinition Width="0"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="3"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0"/>
        </Grid.RowDefinitions>

        <!--Menu-->
        <Border Margin="3, 0, 3, 0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Background="{StaticResource BackgroundPanel}" BorderBrush="{StaticResource BackgroundPanel}" CornerRadius="8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Menu Style="{DynamicResource MainMenu}" Grid.Row="0" Background="{StaticResource BackgroundPanel}" Margin="8, 0, 8, 0">
                    <MenuItem Style="{DynamicResource LeftmostTopLevelMenuItem}" Header="File">
                        <MenuItem x:Name="NewButton" Style="{DynamicResource ChildMenuItem}" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Header="New" Command="New" InputGestureText="Crtl+N"/>
                        <MenuItem x:Name="OpenButton" Style="{DynamicResource ChildMenuItem}" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Header="Open" Command="Open" InputGestureText="Ctrl+O"/>
                        <MenuItem x:Name="SaveButton" Style="{DynamicResource ChildMenuItem}" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Header="Save" Command="Save" InputGestureText="Ctrl+S"/>
                        <MenuItem x:Name="SaveAsButton" Style="{DynamicResource ChildMenuItem}" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Header="Save As" Command="SaveAs" InputGestureText="Ctrl+Alt+S"/>
                        <Separator/>
                        <MenuItem Header="Exit" Style="{DynamicResource ChildMenuItem}" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Command="Close" InputGestureText="Alt+F4"/>
                    </MenuItem>
                    <MenuItem Style="{DynamicResource TopLevelMenuItem}" Header="Edit">
                        <MenuItem x:Name="SavePresetButton" Style="{DynamicResource ChildMenuItem}" Header="Save Preset" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Click="SavePresetButton_Click"/>
                        <MenuItem x:Name="LoadPresetButton" Style="{DynamicResource ChildMenuItem}" Header="Load Preset" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Click="LoadPresetButton_Click"/>
                    </MenuItem>
                    <MenuItem Style="{DynamicResource RightmostTopLevelMenuItem}" Header="Run">
                        <MenuItem x:Name="ProgressTimeButton" Style="{DynamicResource ChildMenuItem}" Header="Progress Time" Background="{StaticResource BackgroundPanel}" Foreground="{StaticResource ForegroundDefault}" Click="ProgressTimeButton_Click"/>
                    </MenuItem>
                </Menu>
            </Grid>
        </Border>
        

        <!--Left Panel-->
        <Border Grid.Row="2" Grid.Column="1" Background="{StaticResource BackgroundPanel}" CornerRadius="8" Margin="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Text="Celestial Bodies"/>

                <ScrollViewer Grid.Row="1" Margin="0, 5, 0, 5" VerticalScrollBarVisibility="Auto">
                    <Grid x:Name="BodySidebarGrid">
                        <Grid.RowDefinitions>

                        </Grid.RowDefinitions>

                    </Grid>
                </ScrollViewer>

                <Button x:Name="AddNewBodyButton" Style="{DynamicResource AddBodyButton}" Grid.Row="2" HorizontalAlignment="Left" Width="20" Margin="5,5,0,0" Click="AddNewBodyButton_Click" Height="20" VerticalAlignment="Top"/>
                <Button x:Name="DeleteBodyButton" Style="{DynamicResource DeleteBodyButton}" Grid.Row="2" HorizontalAlignment="Right" Width="20" Margin="5,5,0,0" Click="DeleteBodyButton_Click" Height="20" VerticalAlignment="Top"/>
            </Grid>
        </Border>

        <GridSplitter Grid.Row ="2" Grid.Column="1" Background="Transparent" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>

        <!--Center Panel-->
        <Border Grid.Row="2" Grid.Column="2" Background="{StaticResource BackgroundPanel}" CornerRadius="8" Margin="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="2"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Foreground="{StaticResource ForegroundDefault}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" FontFamily="Segoe UI" FontWeight="SemiBold" Text="System"/>

                    <Button x:Name="PlayButton" Grid.Column="1" Style="{DynamicResource PlayButton}"  Margin="3,6,3,0" VerticalAlignment="Stretch" Click="PlayButton_Click"/>
                    <Button x:Name="PauseButton" Grid.Column="2" Style="{DynamicResource PauseButton}" Margin="3,6,3,0" VerticalAlignment="Stretch" Click="PauseButton_Click"/>
                    <Button x:Name="StopButton" Grid.Column="3" Style="{DynamicResource StopButton}" Margin="3,6,3,0" VerticalAlignment="Stretch" Click="StopButton_Click"/>
                </Grid>

                <Border Grid.Row="1" Margin="5" CornerRadius="8" BorderThickness="3" BorderBrush="{StaticResource Background}" Background="{StaticResource Background}">
                    <sharpGL:OpenGLControl x:Name="RenderWindow"  Focusable="True" OpenGLDraw="OpenGLControl_OpenGLDraw" DrawFPS="False" FrameRate="144" Resized="OpenGLControl_Resized" MouseLeftButtonUp="RenderWindow_MouseLeftButtonUp"/>
                </Border>
            </Grid>
        </Border>

        <GridSplitter Grid.Row ="2" Grid.Column="3" Background="Transparent" Width="5" HorizontalAlignment="Left" VerticalAlignment="Stretch"/>

        <!--Right Panel: Body-->
        <Border x:Name="BodyGrid" Visibility="Hidden" Grid.Row="2" Grid.Column="3" Background="{StaticResource BackgroundPanel}" CornerRadius="8" Margin="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBox Background="Transparent" BorderThickness="0" x:Name="InfoSidebarTitle" Grid.Row="0" Foreground="{StaticResource ForegroundDefault}" HorizontalAlignment="Center" VerticalAlignment="Stretch" FontSize="18" Text="Venus" VerticalContentAlignment="Center"/>

                <ScrollViewer Grid.Row="1" Margin="0, 5, 0, 5" VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="0" Text="Information" HorizontalAlignment="Center"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="1" Text="Mass:"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Background="{StaticResource BackgroundPanel}" BorderThickness="0" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarMass" Grid.Column="1" Grid.Row="1" Text="5" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="2" Text="Speed:"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarSpeed" Grid.Column="1" Grid.Row="2" Text="10" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="3" Text="Position:"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Padding="50,0,0,0" Grid.Column="1" Grid.Row="4" Text="X:" HorizontalAlignment="Left"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Margin="0,0,0,1" Background="{StaticResource BackgroundPanel}" BorderThickness="0" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarPositionX" Grid.Column="1" Grid.Row="4" Text="0.01" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Padding="50,0,0,0" Grid.Column="1" Grid.Row="5" Text="Y:"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Margin="0,1,0,0" Background="{StaticResource BackgroundPanel}" BorderThickness="0" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarPositionY" Grid.Column="1" Grid.Row="5" Text="0.01" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="6" Text="Velocity:"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Padding="50,0,0,0" Grid.Column="1" Grid.Row="7" Text="X:" HorizontalAlignment="Left"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Margin="0,0,0,1" Background="{StaticResource BackgroundPanel}" BorderThickness="0" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarVelocityX" Grid.Column="1" Grid.Row="7" Text="0.01" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Padding="50,0,0,0" Grid.Column="1" Grid.Row="8" Text="Y:"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Margin="0,1,0,0" Background="{StaticResource BackgroundPanel}" BorderThickness="0" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarVelocityY" Grid.Column="1" Grid.Row="8" Text="0.01" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="9" Text="Acceleration:"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Padding="50,0,0,0" Grid.Column="1" Grid.Row="10" Text="X:" HorizontalAlignment="Left"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarAccelerationX" Grid.Column="1" Grid.Row="10" Text="0.01" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Padding="50,0,0,0" Grid.Column="1" Grid.Row="11" Text="Y:"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarAccelerationY" Grid.Column="1" Grid.Row="11" Text="0.01" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="12" Text="Parent:" HorizontalAlignment="Left"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarParent" Grid.Column="1" Grid.Row="12" Text="Universe" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="13" Text="Radius:" HorizontalAlignment="Left"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Margin="0,1,0,0" Background="{StaticResource BackgroundPanel}" BorderThickness="0" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarRadius" Grid.Column="1" Grid.Row="13" Text="1" HorizontalAlignment="Right"/>
                    </Grid>
                </ScrollViewer>


            </Grid>
        </Border>

        <!--Right Panel: Universe-->
        <Border x:Name="UniverseGrid" Visibility="Visible" Grid.Row="2" Grid.Column="3" Background="{StaticResource BackgroundPanel}" CornerRadius="8" Margin="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Background="Transparent" Grid.Row="0" Foreground="{StaticResource ForegroundDefault}" HorizontalAlignment="Center" VerticalAlignment="Stretch" FontSize="18" Text="Universe"/>

                <ScrollViewer Grid.Row="1" Margin="0, 5, 0, 5" VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="0" Text="Information" HorizontalAlignment="Center"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="1" Text="Simulation Speed:"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Background="{StaticResource BackgroundPanel}" BorderThickness="1" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarSimSpeed" Grid.Column="1" Grid.Row="1" Text="1" HorizontalAlignment="Right"/>
                        <TextBlock Foreground="{StaticResource ForegroundDefault}" Grid.Column="1" Grid.Row="2" Text="Gravitational Constant:"/>
                        <TextBox CaretBrush="{StaticResource ForegroundDefault}" BorderBrush="{StaticResource BorderDefault}" Background="{StaticResource BackgroundPanel}" BorderThickness="1" Foreground="{StaticResource ForegroundDefault}" x:Name="InfoSidebarGravitationalConstant" Grid.Column="1" Grid.Row="2" Text="1" HorizontalAlignment="Right"/>
                    </Grid>
                </ScrollViewer>
            </Grid>
        </Border>
    </Grid>

    <Window.Resources>
        <Style x:Key="ButtonBlackOutline" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Background}"/>
                    <Setter Property="Background" Value="{StaticResource ForegroundDefault}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Viewbox Margin="1,0,1,0">
                            <TextBlock Text="{Binding }" FontWeight="Normal" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"/>
                        </Viewbox>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AddBodyButton" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Background}"/>
                    <Setter Property="Background" Value="{StaticResource BackgroundHighlight}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderDefault}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Path Data="M0.5,0 L0.5,1 M0,0.5 L1,0.5"
          StrokeThickness="1"
          Stretch="Fill"
          Margin="3"
          Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeleteBodyButton" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Background}"/>
                    <Setter Property="Background" Value="{StaticResource BackgroundHighlight}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderDefault}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Path Data="M0,0.5 L1,0.5"
          StrokeThickness="1"
          Stretch="Fill"
          Margin="3"
          Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PlayButton" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Background}"/>
                    <Setter Property="Background" Value="{StaticResource BackgroundHighlight}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderDefault}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Polygon VerticalAlignment="Center" Stretch="Uniform" Margin="5" Points="0,0 16,10, 0,21" Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PauseButton" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Background}"/>
                    <Setter Property="Background" Value="{StaticResource BackgroundHighlight}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderDefault}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="3"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Width="6" Height="15"  Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"/>
                            <Rectangle Grid.Column="2" Width="6" Height="15"  Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StopButton" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Background}"/>
                    <Setter Property="Background" Value="{StaticResource BackgroundHighlight}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderDefault}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Rectangle Width="15" Height="15" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftPanelBodyButton" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Background}"/>
                    <Setter Property="Background" Value="{StaticResource BackgroundHighlight}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderDefault}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding }" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,5,0"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopLevelMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid>
                            <Border x:Name="Border" Background="{StaticResource BackgroundButton}" Width="Auto" Height="Auto" BorderThickness="0.5" BorderBrush="{StaticResource BorderDefault}">
                                <ContentPresenter x:Name="ContentPresenter" Margin="8,0,8,0" Content="{TemplateBinding Header}"/>
                            </Border>
                            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border>
                                    <Grid>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundHighlight}"/>
                                <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="{StaticResource Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundPanel}"/>
        </Style>
        <Style x:Key="LeftmostTopLevelMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="Transparent">
                            <Border x:Name="Border" CornerRadius="8,0,0,8" Background="{StaticResource BackgroundButton}" Width="Auto" Height="Auto" BorderThickness="0.5" BorderBrush="{StaticResource BorderDefault}">
                                <ContentPresenter x:Name="ContentPresenter" Margin="8,0,8,0" Content="{TemplateBinding Header}"/>
                            </Border>
                            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border BorderBrush="{StaticResource BackgroundPanel}" Background="{StaticResource BackgroundPanel}" CornerRadius="8">
                                    <Grid>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundHighlight}"/>
                                <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="{StaticResource Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundPanel}"/>
        </Style>
        <Style x:Key="RightmostTopLevelMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="Transparent">
                            <Border x:Name="Border" CornerRadius="0,8,8,0" Background="{StaticResource BackgroundButton}" Width="Auto" Height="Auto" BorderThickness="0.5" BorderBrush="{StaticResource BorderDefault}">
                                <ContentPresenter x:Name="ContentPresenter" Margin="8,0,8,0" Content="{TemplateBinding Header}"/>
                            </Border>
                            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border BorderBrush="{StaticResource BackgroundPanel}" Background="{StaticResource BackgroundPanel}" CornerRadius="8">
                                    <Grid>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundHighlight}"/>
                                <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="{StaticResource Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundPanel}"/>
        </Style>
        <Style x:Key="ChildMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Margin="3,1,3,1">
                            <Border x:Name="Border" Background="{StaticResource BackgroundButton}" Width="Auto" Height="Auto" BorderThickness="0.5" BorderBrush="{StaticResource BorderDefault}">
                                <ContentPresenter x:Name="ContentPresenter" Margin="8,0,8,0" Content="{TemplateBinding Header}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundHighlight}"/>
                                <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="{StaticResource Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{StaticResource ForegroundDefault}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundPanel}"/>
        </Style>
        <Style TargetType="{x:Type Menu}" x:Key="MainMenu">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Background="{StaticResource BackgroundPanel}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter Height="Auto" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
</Window>